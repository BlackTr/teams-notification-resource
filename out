#!/usr/bin/env bash

rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
  local pos c o

  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  echo "${encoded}"
  REPLY="${encoded}"
}

CURL_OPTION="-k"

set -e
exec 3>&1
exec 1>&2
set -x

payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > "${payload}" <&0

webhook_url="$(jq -r '.source.url' < "${payload}")"
#webhook_url=`eval echo "$webhook_url"`
redacted_webhook_url=$(echo "${webhook_url}" | sed -e 's#/\([^/\.]\{2\}\)[^/.]\{5,\}\([^/.]\{2\}\)#/\1â€¦\2#g' | jq -R .)

text="$(jq -r '.params.text' < "${payload}")"
#text=$(rawurlencode "$text")
#text=`eval echo "$text"`
body="{\"text\": \"${text}\"}"

url_path="$(echo ${webhook_url} | sed -e "s/https\{0,1\}:\/\/[^\/]*\(\/[^?&#]*\).*/\1/")"
curl -v -d "${body}" ${CURL_OPTION} "${webhook_url}" 2>&1 | sed -e "s#${url_path}#***WEBHOOK URL REDACTED***#g"

timestamp=$(date +%s)
metadata="$(cat <<EOF
{
  "version": {"timestamp": "${timestamp}"},
  "metadata": [
    {"name": "url", "value": ${redacted_webhook_url}},
    {"name": "BUILD_PIPELINE_NAME", "value": "${BUILD_PIPELINE_NAME}"}
  ]
}
EOF
)"

echo "$metadata"  >&3

